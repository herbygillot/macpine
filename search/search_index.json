{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Lightweight Alpine VMs on MacOS Create and manage lightweight Alpine VMs on MacOS with: Seamless port forwarding Automatic file sharing Bridged networking aarch64 and x86_64 emulation Motivation The goal of this project is to enable MacOS users to: Easily spin up and manage lightweight Alpine Linux environments. Use tiny VMs to take advantage of containerisation technologies, including LXD and Docker. Build and test software on x86_64 and aarch64 systems.","title":"Home"},{"location":"#lightweight-alpine-vms-on-macos","text":"Create and manage lightweight Alpine VMs on MacOS with: Seamless port forwarding Automatic file sharing Bridged networking aarch64 and x86_64 emulation","title":"Lightweight Alpine VMs on MacOS"},{"location":"#motivation","text":"The goal of this project is to enable MacOS users to: Easily spin up and manage lightweight Alpine Linux environments. Use tiny VMs to take advantage of containerisation technologies, including LXD and Docker. Build and test software on x86_64 and aarch64 systems.","title":"Motivation"},{"location":"create_instance/","text":"How to create an instance","title":"Create an Instance"},{"location":"create_instance/#how-to-create-an-instance","text":"","title":"How to create an instance"},{"location":"install/","text":"Installation Macpine depends on QEMU >= 6.2.0_1: #brew update #brew upgrade brew install qemu Install the latest binary Download the latest binary release for your system and add it to your path by placing to e.g. /usr/local/bin/ wget https://github.com/beringresearch/macpine/releases/download/v.05/alpine sudo mv alpine /usr/local/bin/ Install from source git clone https://github.com/beringresearch/macpine cd macpine make darwin","title":"Installation"},{"location":"install/#installation","text":"Macpine depends on QEMU >= 6.2.0_1: #brew update #brew upgrade brew install qemu","title":"Installation"},{"location":"install/#install-the-latest-binary","text":"Download the latest binary release for your system and add it to your path by placing to e.g. /usr/local/bin/ wget https://github.com/beringresearch/macpine/releases/download/v.05/alpine sudo mv alpine /usr/local/bin/","title":"Install the latest binary"},{"location":"install/#install-from-source","text":"git clone https://github.com/beringresearch/macpine cd macpine make darwin","title":"Install from source"},{"location":"lxd_macpine/","text":"Running LXD containers in Macpine Overview LXD is a next generation system container manager with support for a wide number of Linux distributions . It provides a simple way to build, test, and run multiple Linux environments across a single machine or multiple compute clusters. Under the hood, LXD uses LXC , through liblxc and its Go binding, to create and manage the containers. However, LXD relies on a number of Linux kernel features, such as CGroups and kernel namespaces, which aren't natively available on MacOS. Macpine makes it possible to run LXD/LXC containers on MacOS with support for both amd64 and arm64 processors, through its lightweight virtualisation layer. This workflow makes it easy to develop and test LXD containers locally. Prerequisites Install QEMU brew install qemu Install the latest Macpine binary Install the LXD client brew install lxc Launch an LXD VM Now that that the system is ready, we can create a lightweight Macpine VM, which has been preconfigured to run LXD. In your terminal run: alpine launch --image alpine_3.16.0_lxd --name lxd --port 8443 --ssh 2222 --mount $(pwd) This will create a new VM called lxd and forward port 8443 (the default port that LXD client uses to communicate with the LXD server) of the VM to host. Macpine will attempt to match the native CPU architecture of your host to the correct VM image. However, if you can explicitly specify the architecture by adding either --arch aarch64 or --arch x86_64 to the above command. Configure LXD Before you can create an instance, you need to configure LXD. Run the following command to start the interactive configuration process: alpine exec lxd \"lxd init\" For the purposes of this tutorial, it is recommended to accept default settings. NOTE: the above command is executed inside your lxd VM and is sandboxed from your host. Configure LXD remote Set up your LXD remote to communicate with the LXD client on your host. alpine exec lxd \"lxc config set core.https_address 0.0.0.0\" alpine exec lxd \"lxc config set core.trust_password root\" NOTE: for the purposes of this demonstration, the remote password is configured as root . Add the remote to your LXD host: lxc remote add macpine 127.0.0.1 Accept the certificate and type root for Admin password (this password can be configured with lxc config set core.trust_password above). Finally, set this remote as the default: lxc remote switch macpine That's it - you can now run LXD containers through Macpine at nearly-native speeds! Launching your first LXD container LXD containers can now be launched and manipulated through the lxc client: lxc launch images:debian/bullseye debian Connecting to your first LXD container lxc exec debian -- bash","title":"Create an LXD container in Macpine"},{"location":"lxd_macpine/#running-lxd-containers-in-macpine","text":"","title":"Running LXD containers in Macpine"},{"location":"lxd_macpine/#overview","text":"LXD is a next generation system container manager with support for a wide number of Linux distributions . It provides a simple way to build, test, and run multiple Linux environments across a single machine or multiple compute clusters. Under the hood, LXD uses LXC , through liblxc and its Go binding, to create and manage the containers. However, LXD relies on a number of Linux kernel features, such as CGroups and kernel namespaces, which aren't natively available on MacOS. Macpine makes it possible to run LXD/LXC containers on MacOS with support for both amd64 and arm64 processors, through its lightweight virtualisation layer. This workflow makes it easy to develop and test LXD containers locally.","title":"Overview"},{"location":"lxd_macpine/#prerequisites","text":"Install QEMU brew install qemu Install the latest Macpine binary Install the LXD client brew install lxc","title":"Prerequisites"},{"location":"lxd_macpine/#launch-an-lxd-vm","text":"Now that that the system is ready, we can create a lightweight Macpine VM, which has been preconfigured to run LXD. In your terminal run: alpine launch --image alpine_3.16.0_lxd --name lxd --port 8443 --ssh 2222 --mount $(pwd) This will create a new VM called lxd and forward port 8443 (the default port that LXD client uses to communicate with the LXD server) of the VM to host. Macpine will attempt to match the native CPU architecture of your host to the correct VM image. However, if you can explicitly specify the architecture by adding either --arch aarch64 or --arch x86_64 to the above command.","title":"Launch an LXD VM"},{"location":"lxd_macpine/#configure-lxd","text":"Before you can create an instance, you need to configure LXD. Run the following command to start the interactive configuration process: alpine exec lxd \"lxd init\" For the purposes of this tutorial, it is recommended to accept default settings. NOTE: the above command is executed inside your lxd VM and is sandboxed from your host.","title":"Configure LXD"},{"location":"lxd_macpine/#configure-lxd-remote","text":"Set up your LXD remote to communicate with the LXD client on your host. alpine exec lxd \"lxc config set core.https_address 0.0.0.0\" alpine exec lxd \"lxc config set core.trust_password root\" NOTE: for the purposes of this demonstration, the remote password is configured as root .","title":"Configure LXD remote"},{"location":"lxd_macpine/#add-the-remote-to-your-lxd-host","text":"lxc remote add macpine 127.0.0.1 Accept the certificate and type root for Admin password (this password can be configured with lxc config set core.trust_password above). Finally, set this remote as the default: lxc remote switch macpine That's it - you can now run LXD containers through Macpine at nearly-native speeds!","title":"Add the remote to your LXD host:"},{"location":"lxd_macpine/#launching-your-first-lxd-container","text":"LXD containers can now be launched and manipulated through the lxc client: lxc launch images:debian/bullseye debian","title":"Launching your first LXD container"},{"location":"lxd_macpine/#connecting-to-your-first-lxd-container","text":"lxc exec debian -- bash","title":"Connecting to your first LXD container"},{"location":"modify_instance/","text":"How to modify an instance","title":"Modify an instance"},{"location":"modify_instance/#how-to-modify-an-instance","text":"","title":"How to modify an instance"},{"location":"quickstart/","text":"Quickstart To launch a brand new VM: alpine launch #launches with default parameters alpine launch -a aarch64 #create an aarch64 instance alpine launch -d 10G -c 4 -m 2048 #create a machine with a 10GB disk, 4 cpus and 2GB of RAM Access VM via ssh: alpine launch -s 22 #launch a VM and expose SSH port to host port 22 ssh root@localhost -p 22 #password: root Expose additional VM ports to host: alpine launch -s 23 -p 8888,5432 #launch a VM, expose SSH to host port 23 and forward VM ports 8888 and 5432 to host ports 8888 and 5432 VMs can be easily packaged for export and re-use as tar.gz files: alpine list NAME STATUS SSH PORTS ARCH PID forthright-hook Running 23 aarch64 91598 hot-cow Running 22 x86_64 82361 alpine publish hot-cow This will create a file hot-cow.tar.gz which can be imported as: alpine import hot-cow.tar.gz","title":"Quickstart"},{"location":"quickstart/#quickstart","text":"To launch a brand new VM: alpine launch #launches with default parameters alpine launch -a aarch64 #create an aarch64 instance alpine launch -d 10G -c 4 -m 2048 #create a machine with a 10GB disk, 4 cpus and 2GB of RAM Access VM via ssh: alpine launch -s 22 #launch a VM and expose SSH port to host port 22 ssh root@localhost -p 22 #password: root Expose additional VM ports to host: alpine launch -s 23 -p 8888,5432 #launch a VM, expose SSH to host port 23 and forward VM ports 8888 and 5432 to host ports 8888 and 5432 VMs can be easily packaged for export and re-use as tar.gz files: alpine list NAME STATUS SSH PORTS ARCH PID forthright-hook Running 23 aarch64 91598 hot-cow Running 22 x86_64 82361 alpine publish hot-cow This will create a file hot-cow.tar.gz which can be imported as: alpine import hot-cow.tar.gz","title":"Quickstart"},{"location":"cli/","text":"Command Reference alpine --help Create, control and connect to Alpine instances. Usage: alpine [command] Available Commands: delete Delete an instance. edit Edit instance configuration using Vim. exec execute COMMAND over ssh. help Help about any command import Imports an instance. info Display information about instances. launch Launch an Alpine instance. list List all available instances. publish Publish an instance. ssh Attach an interactive shell to an instance. start Start an instance. stop Stop an instance. Flags: -h, --help help for alpine Use \"alpine [command] --help\" for more information about a command.","title":"Command Reference"},{"location":"cli/#command-reference","text":"alpine --help Create, control and connect to Alpine instances. Usage: alpine [command] Available Commands: delete Delete an instance. edit Edit instance configuration using Vim. exec execute COMMAND over ssh. help Help about any command import Imports an instance. info Display information about instances. launch Launch an Alpine instance. list List all available instances. publish Publish an instance. ssh Attach an interactive shell to an instance. start Start an instance. stop Stop an instance. Flags: -h, --help help for alpine Use \"alpine [command] --help\" for more information about a command.","title":"Command Reference"},{"location":"cli/alpine/","text":"alpine Create, control and connect to Alpine instances. Description Create, control and connect to Alpine instances. Options -h, --help help for alpine","title":"alpine"},{"location":"cli/alpine/#alpine","text":"Create, control and connect to Alpine instances.","title":"alpine"},{"location":"cli/alpine/#description","text":"Create, control and connect to Alpine instances.","title":"Description"},{"location":"cli/alpine/#options","text":"-h, --help help for alpine","title":"Options"},{"location":"cli/alpine_delete/","text":"alpine delete Delete an instance. alpine delete NAME Description Delete an instance. Options -h, --help help for delete Auto generated by spf13/cobra on 27-Nov-2022","title":"delete"},{"location":"cli/alpine_delete/#alpine-delete","text":"Delete an instance. alpine delete NAME","title":"alpine delete"},{"location":"cli/alpine_delete/#description","text":"Delete an instance.","title":"Description"},{"location":"cli/alpine_delete/#options","text":"-h, --help help for delete","title":"Options"},{"location":"cli/alpine_delete/#auto-generated-by-spf13cobra-on-27-nov-2022","text":"","title":"Auto generated by spf13/cobra on 27-Nov-2022"},{"location":"cli/alpine_edit/","text":"alpine edit Edit instance configuration using Vim. alpine edit NAME Description Edit instance configuration using Vim. Options -h, --help help for edit Auto generated by spf13/cobra on 27-Nov-2022","title":"edit"},{"location":"cli/alpine_edit/#alpine-edit","text":"Edit instance configuration using Vim. alpine edit NAME","title":"alpine edit"},{"location":"cli/alpine_edit/#description","text":"Edit instance configuration using Vim.","title":"Description"},{"location":"cli/alpine_edit/#options","text":"-h, --help help for edit","title":"Options"},{"location":"cli/alpine_edit/#auto-generated-by-spf13cobra-on-27-nov-2022","text":"","title":"Auto generated by spf13/cobra on 27-Nov-2022"},{"location":"cli/alpine_exec/","text":"alpine exec execute COMMAND over ssh. alpine exec NAME COMMAND Description execute COMMAND over ssh. Options -h, --help help for exec Auto generated by spf13/cobra on 27-Nov-2022","title":"exec"},{"location":"cli/alpine_exec/#alpine-exec","text":"execute COMMAND over ssh. alpine exec NAME COMMAND","title":"alpine exec"},{"location":"cli/alpine_exec/#description","text":"execute COMMAND over ssh.","title":"Description"},{"location":"cli/alpine_exec/#options","text":"-h, --help help for exec","title":"Options"},{"location":"cli/alpine_exec/#auto-generated-by-spf13cobra-on-27-nov-2022","text":"","title":"Auto generated by spf13/cobra on 27-Nov-2022"},{"location":"cli/alpine_import/","text":"alpine import Imports an instance. alpine import NAME Description Imports an instance. Options -h, --help help for import Auto generated by spf13/cobra on 27-Nov-2022","title":"import"},{"location":"cli/alpine_import/#alpine-import","text":"Imports an instance. alpine import NAME","title":"alpine import"},{"location":"cli/alpine_import/#description","text":"Imports an instance.","title":"Description"},{"location":"cli/alpine_import/#options","text":"-h, --help help for import","title":"Options"},{"location":"cli/alpine_import/#auto-generated-by-spf13cobra-on-27-nov-2022","text":"","title":"Auto generated by spf13/cobra on 27-Nov-2022"},{"location":"cli/alpine_info/","text":"alpine info Display information about instances. alpine info NAME Description Display information about instances. Options -h, --help help for info Auto generated by spf13/cobra on 27-Nov-2022","title":"info"},{"location":"cli/alpine_info/#alpine-info","text":"Display information about instances. alpine info NAME","title":"alpine info"},{"location":"cli/alpine_info/#description","text":"Display information about instances.","title":"Description"},{"location":"cli/alpine_info/#options","text":"-h, --help help for info","title":"Options"},{"location":"cli/alpine_info/#auto-generated-by-spf13cobra-on-27-nov-2022","text":"","title":"Auto generated by spf13/cobra on 27-Nov-2022"},{"location":"cli/alpine_launch/","text":"alpine launch Launch an Alpine instance. alpine launch FLAGS Description Launch an Alpine instance. Options -a, --arch string Machine architecture. Defaults to host cpu architecture. -c, --cpu string Number of CPUs to allocate. (default \"4\") -d, --disk string Disk space to allocate. Positive integers, in bytes, or with K, M, G suffix. (default \"10G\") -h, --help help for launch -i, --image string Image to be launched. (default \"alpine_3.16.0\") -m, --memory string Amount of memory to allocate. Positive integers, in kilobytes. (default \"2048\") --mount string Path to host directory to be exposed on guest. -n, --name string Name for the instance -p, --port , Forward VM ports to host. Multiple ports can be separated by ,. -s, --ssh string Forward VM SSH port to host. (default \"22\") Auto generated by spf13/cobra on 27-Nov-2022","title":"launch"},{"location":"cli/alpine_launch/#alpine-launch","text":"Launch an Alpine instance. alpine launch FLAGS","title":"alpine launch"},{"location":"cli/alpine_launch/#description","text":"Launch an Alpine instance.","title":"Description"},{"location":"cli/alpine_launch/#options","text":"-a, --arch string Machine architecture. Defaults to host cpu architecture. -c, --cpu string Number of CPUs to allocate. (default \"4\") -d, --disk string Disk space to allocate. Positive integers, in bytes, or with K, M, G suffix. (default \"10G\") -h, --help help for launch -i, --image string Image to be launched. (default \"alpine_3.16.0\") -m, --memory string Amount of memory to allocate. Positive integers, in kilobytes. (default \"2048\") --mount string Path to host directory to be exposed on guest. -n, --name string Name for the instance -p, --port , Forward VM ports to host. Multiple ports can be separated by ,. -s, --ssh string Forward VM SSH port to host. (default \"22\")","title":"Options"},{"location":"cli/alpine_launch/#auto-generated-by-spf13cobra-on-27-nov-2022","text":"","title":"Auto generated by spf13/cobra on 27-Nov-2022"},{"location":"cli/alpine_list/","text":"alpine list List all available instances. alpine list Description List all available instances. Options -h, --help help for list Auto generated by spf13/cobra on 27-Nov-2022","title":"list"},{"location":"cli/alpine_list/#alpine-list","text":"List all available instances. alpine list","title":"alpine list"},{"location":"cli/alpine_list/#description","text":"List all available instances.","title":"Description"},{"location":"cli/alpine_list/#options","text":"-h, --help help for list","title":"Options"},{"location":"cli/alpine_list/#auto-generated-by-spf13cobra-on-27-nov-2022","text":"","title":"Auto generated by spf13/cobra on 27-Nov-2022"},{"location":"cli/alpine_publish/","text":"alpine publish Publish an instance. alpine publish NAME Description Publish an instance. Options -h, --help help for publish Auto generated by spf13/cobra on 27-Nov-2022","title":"publish"},{"location":"cli/alpine_publish/#alpine-publish","text":"Publish an instance. alpine publish NAME","title":"alpine publish"},{"location":"cli/alpine_publish/#description","text":"Publish an instance.","title":"Description"},{"location":"cli/alpine_publish/#options","text":"-h, --help help for publish","title":"Options"},{"location":"cli/alpine_publish/#auto-generated-by-spf13cobra-on-27-nov-2022","text":"","title":"Auto generated by spf13/cobra on 27-Nov-2022"},{"location":"cli/alpine_ssh/","text":"alpine ssh Attach an interactive shell to an instance. alpine ssh NAME Description Attach an interactive shell to an instance. Options -h, --help help for ssh Auto generated by spf13/cobra on 27-Nov-2022","title":"ssh"},{"location":"cli/alpine_ssh/#alpine-ssh","text":"Attach an interactive shell to an instance. alpine ssh NAME","title":"alpine ssh"},{"location":"cli/alpine_ssh/#description","text":"Attach an interactive shell to an instance.","title":"Description"},{"location":"cli/alpine_ssh/#options","text":"-h, --help help for ssh","title":"Options"},{"location":"cli/alpine_ssh/#auto-generated-by-spf13cobra-on-27-nov-2022","text":"","title":"Auto generated by spf13/cobra on 27-Nov-2022"},{"location":"cli/alpine_start/","text":"alpine start Start an instance. alpine start NAME Description Start an instance. Options -h, --help help for start Auto generated by spf13/cobra on 27-Nov-2022","title":"start"},{"location":"cli/alpine_start/#alpine-start","text":"Start an instance. alpine start NAME","title":"alpine start"},{"location":"cli/alpine_start/#description","text":"Start an instance.","title":"Description"},{"location":"cli/alpine_start/#options","text":"-h, --help help for start","title":"Options"},{"location":"cli/alpine_start/#auto-generated-by-spf13cobra-on-27-nov-2022","text":"","title":"Auto generated by spf13/cobra on 27-Nov-2022"},{"location":"cli/alpine_stop/","text":"alpine stop Stop an instance. alpine stop NAME Description Stop an instance. Options -h, --help help for stop Auto generated by spf13/cobra on 27-Nov-2022","title":"stop"},{"location":"cli/alpine_stop/#alpine-stop","text":"Stop an instance. alpine stop NAME","title":"alpine stop"},{"location":"cli/alpine_stop/#description","text":"Stop an instance.","title":"Description"},{"location":"cli/alpine_stop/#options","text":"-h, --help help for stop","title":"Options"},{"location":"cli/alpine_stop/#auto-generated-by-spf13cobra-on-27-nov-2022","text":"","title":"Auto generated by spf13/cobra on 27-Nov-2022"}]}